This is a step-by-step of pIBIS model setup on a laptop.

Dec 27 2017

Jinxun Liu, USGS western Geographic Science Center 
jxliu@usgs.gov

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Netbook
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Laptop	--	Compaq CQ10-405DX,

Linux	--	Fedora LXDE 27

MEM	--	2 GB
Storage --	500 TGB
CPU	--	2 processors, Intel Atom


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Needed Packages
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C,C++	--	/usr/lib64/ccache/gcc
FORTRAN	--	/usr/bin/gfortran
F77	--	/usr/lib64/ccache/g77

OpenMPI --	/usr/lib64/openmpi/bin/mpirun
		/usr/lib64/openmpi/bin/mpicc

Netcdf	--	/home/jxliu/netcdf363/
	--	/home/jxliu/netcdf4211/

pNetcdf	--	/home/jxliu/PnetCDF/

NCView	--	/usr/bin/ncview

pIBIS	--	/home/jxliu/Research/pibis/

DDD	--	debugger

-- Package Installations:
su
dnf update
dnf groupinstall 'Development Tools'
dnf groupinstall 'C Development Tools and Libraries'
dnf install gcc-gfortran
dnf install openmpi
dnf install openmpi openmpi-devel
dnf install compat-gcc-34-g77.x86_64
dnf install ddd
(sudo dnf install netcdf-devel)
dnf install ncview
dnf install libcurl-devel

--shell update
cd ~/
vi .bash_profile

(insert several lines:)
PATH=$PATH:/usr/lib64/openmpi/bin
PATH=$PATH:./
PATH=$HOME/PnetCDF/bin:$PATH
LD_LIBRARY_PATH=$PATH:/sur/local/lib
export LD_LIBRARY_PATH
(wq)

source .bash_profile

--Install netCDF3.6.3:
cd /home/jxliu/
tar -xzf netcdf363.tar.gz

--Install parallel netCDF:
dnf install m4
mkdir /home/jxliu/PnetCDF
./configure --prefix=$HOME/PnetCDF
make
make install

--Install netCDF4:
    1 $ # Build libcurl
    2 $ cd /home/jxliu/Extracts/curl-7.57.0
    3 $ ./configure # default dir is /usr/local
    4 $ make check
    5 $ sudo make install

    1 $ # Build and install zlib
    2 $ cd /home/jxliu/Extracts/zlib-1.2.11
    2 $ ZDIR=/usr/local
    3 $ ./configure --prefix=${ZDIR}
    4 $ make check
    5 $ sudo make install   # or sudo make install, if root permissions required

    1 $ # Build and install HDF5
        PATH=/usr/lib64/openmpi/bin/
        CC=mpicc
    2 $ cd /home/jxliu/Extracts/hdf5-1.8.20
    2 $ H5DIR=/usr/local
    3 $ ./configure --with-zlib=${ZDIR} --prefix=${H5DIR} --disable-shared --disable-largefile --enable-parallel 
    4 $ make check
    5 $ sudo make install   # or sudo make install, if root permissions required

    1 $ # Build and install netCDF-4.5.0
    2 $ cd /home/jxliu/Extracts/netcdf-c-4.5.0
    2 $ NCDIR=/home/jxliu/netcdf450 #NCDIR=/usr/local
    3 $ CPPFLAGS=-I${H5DIR}/include LDFLAGS=-L${H5DIR}/lib ./configure --prefix=${NCDIR}
    4 $ (./configure --disable-netcdf-4 --prefix=/home/jxliu/netcdf4211)
    4 $ make check
    5 $ sudo make install  # or sudo make install

    1 $ # Build and install netCDF-4.2.1.1
    2 $ cd /home/jxliu/Extracts/netcdf-4.2.1.1
    4 $ ./configure --disable-netcdf-4 --prefix=/home/jxliu/netcdf4211
    4 $ make check
    5 $ make install

    6 $ goto NetCDF4211 Fortran directory (netcdf-fortran-4.2)
    7 $ export LD_LIBRARY_PATH=/home/jxliu/netcdf4211/lib:${LD_LIBRARY_PATH}
    8 $ CPPFLAGS=-I/home/jxliu/netcdf4211/include LDFLAGS=-L/home/jxliu/netcdf4211/lib .
        /configure --prefix=/home/jxliu/netcdf4211 CC=gcc FC=gfortran
    9 $ make check 
    10 $ make install

link NetCDF4 example:

LIBS='-L/X/netcdf-4.0/lib -lnetcdf -L/X/hdf5-1.8.1/lib -lhdf5_hl -lhdf5 -lz -lm -L/X/szip-2.1/lib -lsz'

LIBS="-L${NCDIR}/lib -lnetcdf -L${H5DIR}/lib -lhdf5_hl -lhdf5 -L${ZDIR}/lib -lz -lm"

--Install Google Chrome
sudo -i
cat << EOF > /etc/yum.repos.d/google-chrome.repo
[google-chrome]
name=google-chrome - \$basearch
baseurl=http://dl.google.com/linux/chrome/rpm/stable/\$basearch
enabled=1
gpgcheck=1
gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF

dnf install google-chrome-stable


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pIBIS direcories in Fedora 27
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Data	--	CA_clip_060817.tar.gz
Code	--	pibis_CA_060817.tar.gz

Input	--	/home/jxliu/data/CA_clip_060817/
Work_Dir--	/home/jxliu/Research/pibis/
C_code	--	/home/jxliu/Research/pibis/
F_code	--	/home/jxliu/Research/pibis/ibis/

--pIBIS instalation
cd ~/
mkdir Research
mv pibis_CA_060817.tar.gz ./Research/
cd Research
tar -xzf pibis_CA_060817.tar.gz
mv pibis_CA_060817 pibis

cd ~/
mkdir data
mv CA_clip_060817.tar.gz ./data/
cd data
tar -xzf CA_clip_060817.tar.gz


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compile/Run at working directory
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cd ~/Research/pibis
rm input
ln -s /home/jxliu/data/CA_clip_060817 input

cd ibis
compile_gfortran_savebin.rc		!compile ibis fortran code
make_lib_savebin.rc			!build libibis.a for mpi use

cd /home/jxliu/Research/pibis
make_main.rc				!build parallel pibis

vi ibis.infile				!modify simulation spec:
					!region size,time,sampling

mpirun -np 8 pibis			!run 8 pibis in Work_Dir

ncview aynpptot.nc			!check if NPP looks OK

invert.sh				!convert outfile to dat file

run_Dat2NC_x_local.sh			!convert dat to netcdf file


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Compile/Run large region
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
vi p_list_sub_region_N_blocks_comp.asc	!modify large region spec:
					!region size, max ranks

sub_region_N_blocks_segment_comp_dyn \
p_list_sub_region_N_blocks_comp.asc 15	!create simulation windows
					!each can be 800X800

cd /home/jxliu/Research/xibis1
submit_pibis.sh				!use this on Mira/Vesta

cd /home/jxliu/Research/xibis2
submit_pibis.sh				!use this on Mara/Vesta

cd /home/jxliu/Research/pibis

run_invert.sh				!outfile to dat conversion

run_Dat2NC.sh				!dat to netcdf conversion

vi p_list_sub_region_N_blocks_merge_comp.asc.CONUS
					!edit to merge windows 

run_merge_avar40_alcf.sh		!merge into whole region


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Notes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. assume each pibis segment has 10 land cells. They can be
   1 vegetation cell and 9 non-vegetation, at least one veg.
   If no valid vegetated land cell, the segment is invalid.
   For example, a 40x40 window can be a 10x10 actual window
   if we use do sampling every 4 row 4 column. If each pibis 
   simulates 10 land cells, we can have 10 pibis. But actual
   valid segment can be smaller than 10, if many non-
   vegetaiton are present.

2. when doing a large region, need to make sure the column
   numbers can be evenly divided by aXb, where
   a=10, is npoi, the number land cells each pibis simulates;
   b=4, is the spatial sampling interval.
   So, the colums of the window can be 40, 400, 40800, etc...

3. segment comp and merge are mainly done on ALCF Mira/Vesta
   need to change on different machines. C code included.

